apiVersion: v1
kind: Service
metadata:
  name: proxy
  namespace: pulsartest
  labels:
    component: proxy
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      nodePort: 30001
      protocol: TCP
    - name: pulsar
      port: 6650
      nodePort: 30002
      protocol: TCP
  selector:
    component: proxy
  
---

apiVersion: v1
kind: Pod
metadata:
  name: proxy
  namespace: pulsartest
  labels:
    component: proxy
spec:
  initContainers:
    - name: wait-zookeeper-ready
      image: apachepulsar/pulsar-all:2.6.1
      command: ["sh", "-c"]
      args:
        - >-
          until bin/pulsar zookeeper-shell -server zookeeper:2181 get /admin/clusters/pulsartest; do
            sleep 3;
          done;
    - name: wait-broker-ready
      image: apachepulsar/pulsar-all:2.6.1
      command: ["sh", "-c"]
      args:
        - >-
          set -e;
          brokerServiceNumber="$(nslookup -timeout=10 broker | grep Name | wc -l)";
          until [ ${brokerServiceNumber} -ge 1 ]; do
            echo "pulsar cluster isn't initialized yet ... check in 10 seconds ...";
            sleep 10;
            brokerServiceNumber="$(nslookup -timeout=10 broker | grep Name | wc -l)";
          done;
    - name: wait-bookkeeper-ready
      image: apachepulsar/pulsar-all:2.6.1
      command: ["sh", "-c"]
      args:
        - >-
          set -e;
          brokerServiceNumber="$(nslookup -timeout=10 bookkeeper | grep Name | wc -l)";
          until [ ${brokerServiceNumber} -ge 1 ]; do
            echo "pulsar bookkeeper isn't initialized yet ... check in 10 seconds ...";
            sleep 10;
            brokerServiceNumber="$(nslookup -timeout=10 bookkeeper | grep Name | wc -l)";
          done;
  containers:
    - name: proxy
      image: apachepulsar/pulsar-all:2.6.1
#      livenessProbe:
#        httpGet:
#          path: /status.html
#          port: 80
#        initialDelaySeconds: 60
#        periodSeconds: 60
#        failureThreshold: 60
#      readinessProbe:
#        httpGet:
#          path: /status.html
#          port: 80
#        initialDelaySeconds: 60
#        periodSeconds: 60
#        failureThreshold: 60
#      startupProbe:
#        httpGet:
#          path: /status.html
#          port: 80
#        initialDelaySeconds: 30
#        periodSeconds: 10
#        failureThreshold: 10
      command: ["sh", "-c"]
      args:
        - >
          bin/apply-config-from-env.py conf/proxy.conf &&
          echo "OK" > status &&
          exec bin/pulsar proxy
      ports:
        - name: http
          containerPort: 80
        - name: pulsar
          containerPort: 6650
      env:
        - name: clusterName
          value: pulsartest
        - name: statusFilePath
          value: /pulsar/status
        - name: servicePort
          value: "6650"
        - name: webServicePort
          value: "80"
        - name: brokerServiceURL
          value: pulsar://broker:6650
        - name: brokerWebServiceURL
          value: http://broker:8080
        - name: PULSAR_LOG_LEVEL
          value: "4"