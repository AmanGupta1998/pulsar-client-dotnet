apiVersion: v1
kind: Service
metadata:
  name: broker
  namespace: pulsartest
  labels:
    component: broker
spec:
  selector:
    component: broker
  ports:
    - name: http
      port: 8080
    - name: pulsar
      port: 6650
  clusterIP: None

---
apiVersion: v1
kind: Pod
metadata:
  name: broker
  namespace: pulsartest
  labels:
    component: broker
spec:
  initContainers:
    - name: wait-zookeeper-ready
      image: apachepulsar/pulsar-all:2.6.1
      command: ["sh", "-c"]
      args:
        - >
          until bin/bookkeeper org.apache.zookeeper.ZooKeeperMain -server zookeeper:2181 get /admin/clusters/pulsartest; do
            echo "pulsar cluster pulsartest isn't initialized yet ... check in 3 seconds ..." && sleep 3;
          done;
    - name: wait-bookkeeper-ready
      image: apachepulsar/pulsar-all:2.6.1
      command: ["sh", "-c"]
      args:
        - >
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          until bin/bookkeeper shell whatisinstanceid; do
            echo "bookkeeper cluster is not initialized yet. backoff for 3 seconds ...";
            sleep 3;
          done;
      env:
        - name: zkServers
          value: zookeeper:2181
  containers:
    - name: broker
      image: apachepulsar/pulsar-all:2.6.1
      command: ["sh", "-c"]
      args:
        - >
          bin/apply-config-from-env.py conf/broker.conf;
          bin/gen-yml-from-env.py conf/functions_worker.yml;
          cat conf/broker.conf;
          echo "OK" > status;
          bin/pulsar zookeeper-shell -server zookeeper:2181 get /loadbalance/brokers/${HOSTNAME}:8080;
          while [ $? -eq 0 ]; do
            echo "broker ${HOSTNAME}.pulsartest.svc.cluster.local znode still exists ... check in 10 seconds ...";
            sleep 10;
            bin/pulsar zookeeper-shell -server zookeeper:2181 get /loadbalance/brokers/${HOSTNAME}:8080;
          done;
          cat conf/pulsar_env.sh;
          bin/pulsar broker;
      ports:
        - name: http
          containerPort: 8080
        - name: pulsar
          containerPort: 6650
      env:
        - name: zookeeperServers
          value: zookeeper:2181
        - name: clusterName
          value: pulsartest
        - name: webServicePort
          value: "8080"
        - name: statusFilePath
          value: /pulsar/status
      livenessProbe:
        httpGet:
          path: /status.html
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 30
        failureThreshold: 60
      readinessProbe:
        httpGet:
          path: /status.html
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 30
        failureThreshold: 60
      startupProbe:
        httpGet:
          path: /status.html
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 30
        failureThreshold: 60
